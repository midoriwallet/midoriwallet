name: Build and Push Container

on:
  push:
    branches: ["main"]
    tags: ["v*", "release-*"]
  workflow_dispatch:

permissions:
  contents: read
  packages: write # necesario para publicar en GHCR

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # ghcr.io/OWNER/REPO

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (optional, para multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Etiquetas: última de main y/o tag semántico
      - name: Extract Docker metadata (tags/labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./containerfile
          push: true
          # Para multi-arch, descomenta:
          # platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Pasamos el token como secret de BuildKit (no queda en capas)
          secrets: |
            "npm_token=${{ secrets.NPM_TOKEN }}"
          # Habilita caché entre builds
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
